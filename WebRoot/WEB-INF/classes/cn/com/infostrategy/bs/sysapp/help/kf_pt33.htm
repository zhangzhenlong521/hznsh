<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<title>平台所有33个功能</title>
<style type="text/css">
<!--
.style1 {
	font-size:12px;
}
.style2 {
	color: #FF0000;
	font-weight: bold;
}
-->
</style>
</head>

<body>
WebPush主要有以下33点功能<br><br>

<p class="style1">
<span class="style2">1)管理控制台</span><br>
 ●整个系统实施与配置都通过该管理控制台进行的,比如模板配置,工作流设计等所有配置工作都是从管理控制台进入的,即它是平台入口与载体<br>
 ● 从系统控制台还可以查看到大量监控信息,比如:查看在线人数,查看服务器端配置项,数据源连接池状态等<br>
 ●管理控制台原则上是对超级系统管理员开放的,但有需要的话也可对业务管理员开放<br>
 <br>
 
<span class="style2">2)业务实体设计器</span><br>
 ●也叫元数据设计器,即可以在系统直接创建一个新的业务实体对象,从创建物理表,生成对应Java实体Bean对象,最生成一个可配置的模板<br>
 ●业务实体既可以从一个物理表或视图快速导入,也可以直接创建<br>
●业务实体是系统的原子对象,通过N个业务实体之间的关联,比如一对一,一对多,多对多等就能实现复杂的业务功能<br>
 <br>
 
<span class="style2">3)表单设计器</span><br>
 ●对一个业务实体对象的各个字段进行控件定义,布局设计,控件包括:文本框,下拉框,参照,上传附件等25种控件类型!<br>
 ●可以更改控件大小,位置,字体,颜色,是否可编辑,是否显示等<br>
 ●可以定义某一项是否是必输项,或者是警告项<br>
 ●可以为该表单指定数据加载的数据源与表名或视图名<br>
 ●可以为各项定义加载公式与编辑公式<br>
●其他更多见后面的附录1<br>
 <br>
 
<span class="style2">4)UI框架</span><br>
 ●使用表单设计器设计好的表单，可转换成卡片/列表/树型等组件<br>
 ●使用分割器,多页签,工具条,向导层等布局控件将两个以上的组件进行拼装,形成风格模板页面,比如上下结构主从表,多页签式一主多子表等<br>
 ●约定好各种拦截器,开发人员直接继承风格模板页面,通过重构各拦截器实现业务逻辑,比如保存前做什么,删除后做什么<br>
 <br>
 
<span class="style2">5)工作流引擎</span><br>
 ●可以直接在线画图的工作流设计器<br>
 ●可以指定各环节上的审批模式,比如抢占/会签/子流程等<br>
 ●可以指定各个环节上的参与者,参与者分静态与动态两种机制,类型又分根据角色,机构,人员等<br>
 ●指定特定环节上是否可以提交/退回/结束等功能<br>
 ●支持分支与合并,即从一个环节出发,可以有多条分支,并能根据各个分支上的条件设置,自动动态选择正确的分支<br>
 ●提供拦截器配置进行二次开发,即工作流走完特定环节后,可以执行特定的业务代码,更改表单上的某个字段<br>
 ●其他更多见附录2<br>
 <br>
 
<span class="style2">6)查询条件与过滤条件设计器</span><br>
 ●可以自定义查询条件,动态拼接SQL<br>
 ●有快速查询与通用查询之分<br>
 ●查询机制有In机制,Like Or机制,自定义SQL等<br>
 ●其他更多见附录3<br>
 <br>
 
<span class="style2">7)报表引擎</span><br>
 ●报表基本上不需要开发,只需配置即可,有类似Excel的工具直接在线设计报表格式<br>
 ●报表类型有多种:单列表,多维报表,交叉报表,可层层钻取<br>
 ●支持柱形/曲形/饼图等展示<br>
 ●报表可以方便即时导出成Excel,Word,Html,并打印<br>
 ●其他更多见附录3<br>
 <br>
 
<span class="style2">8)打印,套打</span><br>
 ●既可将报表数据导出打印,也可直接在线打印<br>
 ●支持套打,即使用打印设计器设计最后打印内容的位置与字体,从而实现套打功能<br>
 <br>
 
<span class="style2">9)UI外观,首页布局配置,多风格多皮肤切换</span><br>
 ●首页支持抽屉,菜单树,按钮栏等多种风格<br>
 ●首页内容包括:公告消息,任务中心,快捷访问,管理导航图4项内容,可自由选择默认项<br>
 ●支持多皮肤切换,即可个性定义自己喜欢的颜色,字体等<br>
 <br>
 
<span class="style2">10)基础数据,系统下拉字典库</span><br>
 ●系统默认提供大量常用基础数据,比如全国城市,民族,各行业等<br>
 ●系统有下拉字典库,可以直接在里面新增数据项<br>
●系统安装后预置70多个基础库<br>
 <br>
 
<span class="style2">11)系统参数仪表盘</span><br>
 ●系统提供300多个参数开关,通过这些参数配置满足客户个性化需求<br>
 ●参数分平台参数,产品参数,项目参数,即项目中的参数也可以直接在这里扩展,而不需要另行开发<br>
 <br>
 
<span class="style2">12)功能权限</span><br>
 ●可以灵活定义功能菜单<br>
 ●为某个人员/角色/角色组分配对应的功能权限<br>
 ●超级管理员或超级功能点可以直接全部开放,从而减少配置工作量<br>
 <br>
 
<span class="style2">13)数据权限</span><br>
 ●不同的人在同一个功能中查询数据时会有不同的隐藏数据权限,比如总行管理员可以查看全部数据,分行管理员只能查看本分行的数据<br>
 ●数据权限的设计支持多种:SQL条件定义,公式定义,宏代码,自下义类<br>
 ●数据权限可以灵活绑定数据对象的不同属性,比如机构,人员,业务分类等<br>
 <br>
 
<span class="style2">14)数据存储,事务处理,多数据源,连接池</span><br>
 ●系统提供CommDMO对象实现所有常用的数据存储功能<br>
 ●不同模块之间的互相调用时,后面的数据存储操作自动参与进前面的事务,即必须是同一链式事务,发生异常时一起回滚<br>
 ●系统支持多数据源设置,即可以同时有Oracle,SQLServer,Mysql等不同类型的多数据源,在不同数据源之间互相操作时非常方便<br>
 <br>
 
<span class="style2">15)主键/流水号/单据号生成器</span><br>
 ●单据主键号是非常重要与特殊的对象,必须保证绝对唯一,必须在性能与冗余之间取得平衡<br>
 ●因为需要支持多数据库,所以不能使用像Oracle中Sequence这种特殊功能,需要平台重新实现<br>
 ●每次一下子取20个号,并放在缓存中,通过线程同步与内存锁控制,保证绝对不会发生重号现象,尤其在集群模式下也是安全的<br>
 ●单据号还可指定特定前辍或编码规则,实现更灵活的功能<br>
 <br>
 
<span class="style2">16)性能监控器,性能测试工具</span><br>
 ●系统提供性能监控表,随时扫描最大并发数,数据库连接池中的性能参数<br>
 ●除了使用LoadRunder等性能工具测试外,系统还自带了一个快捷的性能测试工具,方便进行性能测试<br>
 <br>
 
<span class="style2">17)异常框架,错误诊断跟踪工具</span><br>
 ●发生异常时需要对异常进行分类甚至编码,从而能快速定位问题<br>
 ●异常分远程异常,业务异常,系统异常等几大类<br>
 ●远程异常会自动将服务器端的异常堆栈回转到客户端,从而方便客户端分析问题<br>
 ●业务异常弹出框时自动只显示内容,而不显示堆栈,而系统异常的提示方式与内容则不同,需显示堆栈<br>
 <br>
 
<span class="style2">18)预警平台</span><br>
 ●对特定业务对象,设置警界条件,阀值,警示时间,则定期自动预警<br>
 ●预警提示方式可以在首页自动弹出,也可以发邮件,短信等多种方式<br>
 ●预警可以与功能权限及数据权限绑定,从而实现不同角色的人员可以得到不同级别的预警内容<br>
 <br>
 
<span class="style2">19)消息引擎</span><br>
 ●除了预警信息外,系统还有大量的其他消息,这些消息不能散落在系统各处,而是要集中显示,即所谓的消息中心<br>
 ●消息中心一般都在首页,或单独有一个功能点,从消息中心中通过点击超链接可以直接跳转到对应的业务功能点进行相应的处理<br>
 ●消息生成机制有“推送”与“抽取”两种机制，他们在性能,权限控制上各有优缺点,要灵活使用<br>
 <br>
 
<span class="style2">20)公式引擎</span><br>
 ●大量配置都必须使用公式来实现,就像Excel中的公式一样,系统提供各种公式,也包括业务公式<br>
 ●业务公式是指可以取得登录人员所属机构,所属角色,等<br>
 ●公式是可以任意无限制嵌套使用的,从而实现复杂的功能<br>
 ●公式分客户端公式与服务器端公式,客户端公式可以直接操纵UI控件的是否可编辑,是否显示等效果,服务器端公式则一般进行数据处理<br>
 <br>
 
<span class="style2">21)缓存工厂</span><br>
 ●一些更新频率非常低,但又经常使用的数据完全可以做缓存处理,而不需要每次都从数据库中查询,这样会大大提高性能!尤其那些本身数据量又很大的更要做缓存,比如机构<br>
 ●一旦做了缓存后,如果原始数据发生变化,有可靠及时的机制通知缓存刷新,在集群模式下,更要保证缓存的同步更新<br>
 ●缓存分客户端缓存与服务器端缓存,因为有些数据是客户端经常使用的,为了减少网络访问次数,必须是客户端缓存<br>
 ●客户端缓存还可以持久化存储,这样下次登录时都可以直接使用,甚至实现离线操作!<br>
 <br>
 
<span class="style2">22)自动任务引擎</span><br>
 ●任何一个系统都肯定有不少在后台定期更循环跑的自动任务,所以需要自动任务引擎,比如数据备份<br>
 ●与Windows的自动任务类似,任务触发时间有两种机制,一种是每隔多长时间跑一遍,而限循环去跑! 另一种是每天/每周/每月在固定时间跑,比如每天零晨2点<br>
 ●任务无论成功或失败都要有日志记录,超时任务甚至还要配置有预警<br>
 ●在集群模式下,有的任务可以每个实例都跑,有的则只限制在一个实例中跑,需要通过参数设置灵活设置!<br>
 <br>
 
<span class="style2">23)系统日志中心</span><br>
 ●系统所有操作,访问都要有日志记录,而且各处的日志都汇总记录在一处,即日志中心<br>
 ●系统日志能监控什么机构/什么人在什么时间访问了什么功能点,什么时候登录的,又是什么时候退出的<br>
 ●使用Log4j来实现的,可以通过参数定义输出级别,比如Debug,Info,Error等<br>
 ●日志每天生成一个文件,但自动删除两周之前的日志,即只保留最近两周的日志,因为日志的数据量非常大<br>
 ●在集群模式下,各个实例的日志是独立分开的,并不合在一起,否则非常混乱,不容易分析问题<br>
 <br>
 
<span class="style2">24)与Office集成,Office控件</span><br>
 ●系统采用第三方Office控件,进行二次开发,可以在线编辑Word,Excel,并自动保存到服务器上<br>
 ●为了保证安全,可以对Word内容进行加密处理,然后加载之前先解密<br>
 ●可以方便导出PDF,并加密处理<br>
 <br>
 
<span class="style2">25)安全认证,包括密码登录认证,数字证书登录验证,敏感数据加密</span><br>
●系统有多种安全机制,光登录就有静态密码,动态密码,数字证书等多种认证方式<br>
●对敏感数据可以单独进行加密保存,比如银行帐户,密码等<br>
●数字证书是采用经过国家权威机构认证的第三方技术,并不是我们自行开发的,所以说是安全的<br>
 <br>
 
<span class="style2">26)网络通讯数据压缩与加密</span><br>
 ●客户端与服务器端通讯,除了使用Http协议外,还可以使用Https协议<br>
 ●在此基础我们还可以再次对数据包进行压缩与对称加密<br>
 ●网络传输是采用标准的Java通讯API,是非常成熟与稳定的<br>
 <br>
 
<span class="style2">27)集群支持</span><br>
 ●在访问量很大时,可以采用集群模式,即部署多个中间件服务器,从而平均分摊总访问量<br>
 ●既可以在同一台机器开不同端口实现“软集群”,也可以直接在不同机器上部署实现“硬集群”<br>
 ●目前只对中间件集群, 数据库集群则直接采用数据库厂商的技术<br>
 <br>
 
<span class="style2">28)数据导入导出工具,外部数据交换平台</span><br>
 ●将系统中的数据导出成指定格式的文件,或将文件导入系统<br>
 ●数据格式是采用标准的XML格式,这样也可以与任何其他异构系统进行交换处理<br>
●过于复杂的外部数据交换可能需要二次开发<br>
 <br>
 
<span class="style2">29)数据备份恢复工具</span><br>
 ●数据需要定期进行备份,并可恢复<br>
 ●对一般数据可以直接全部备份,则可以直接采用数据库厂商的工具<br>
 ●但对一些数据量非常大的业务表数据,则必须采用增加备份的方法,所以需要系统提供特定工具<br>
 ●增量备份与恢复的原理就是通过一个标记位,记录每次备份的截点,下次则从这个截点开始增量备份<br>
 <br>
 
<span class="style2">30)升级更新工具,版本管理</span><br>
 ●无论是平台还是产品,都要定期升级,所以需要一个功能强大,操作友好的升级工具,并进行有效的版本管理<br>
 ●升级内容一般包括两部分,一部分是代码包,一般就是一个jar文件,另一部分就数据库更新,一般是一批SQL语句或者xml文件<br>
 ●平台或产品每次发布都有指定的版本号,新版本必须兼容旧版本,或者通过参数配置可以设置为默认值就是旧版本的效果,这样才不会每次升级会突然修改原有的操作习惯<br>
 <br>
 
<span class="style2">31)外部通讯集成,包括:邮件集成,短信集成,IM集成,搜索集成,企业门户集成</span><br>
 ●系统可以进行邮件,短消息,IM工具等外部通讯工具集成<br>
 ●这些集成往往需要调用第三方的接口,比如短信集成,就需要调客户提供的短信网关接口<br>
 ●企业户集成一般使用单点登录的方式,系统提供良好的单点登录接口,只需要在项目中直接调用一个URL即可<br>
 <br>
 
<span class="style2">32)多语言支持</span><br>
 ●平台支持多语言,可以满足多种语言环境使用,在国际化的客户中尤其必要<br>
 ●目前只支持英语,简体中文,繁体中文三种语言<br>
 ●但以后以后扩展新的语言,但无论是新增功能,还是修改功能,都必须对所有语言进行重新翻译与设置,即多语言配置与扩展功能已实现,但翻译的工作量非常大<br>
 <br>
 
<span class="style2">33)license许可验证、盗版验证,过期失效验证</span><br>
 ●为了对知识产权的保护,系统有license许可验证,既有临时license码,用于试运行阶段,也有永久正式码<br>
 ●有盗版验证功能,即如果将系统拷贝到别的机器则不能使用<br>
 ●如果不是买断产品所有权,而是一年一年购买使用权的模式,则还有过期失效验证,即到了第二年就自动失效!<br>
<br>
</p>

</body>
</html>
