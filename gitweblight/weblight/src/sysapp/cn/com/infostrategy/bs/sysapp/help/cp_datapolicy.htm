<html>
<head>
<META http-equiv=Content-Type content="text/html; charset=GBK">
<TITLE>数据权限策略</TITLE>
<style type="text/css"> 
.p_text  { font-size: 12px;}
.style1 {color: #FFFFFF}
.style2 {color: #FF0000}
.style3 {color: #0000FF}
</style>
</head>

<body>
<p class="p_text">
数据权限策略的关键原则:<br>
1.紧紧抓抓住最主要的四个维度：查询与维护是两种逻辑；管理员与一般员工是不一样的；总行与分行不一样；各种数据对象是不同的，而最重要的数据对象有“公文数据”与“工作数据”两种！！<br>
<br>
2.所谓“查询与编辑是两种逻辑”是指：查询条件中的过滤逻辑与维护情况下的逻辑是不一样的！<br>
  查询往往是强调可以看更多范围的，可以多选，比如我可以选择上海分行与北京分行一起看！所以说查询条件一般肯定具有<font color="red">两个根本特征</font>：一个是多选，另一个是可以查看权限范围内的所有子孙！可以形象的简称为“一大片”<br>
  维护往往强调的是“本部门”！即只能录入本部门的数据，具体做法又有两种，一种是直接设置成默认值不可编辑，另一种是可以选择，但只能选择本部门的直系部门,顶多包含本部门的其他科室，或者说是兄弟部门！可以形象的简称为“一条线”<br>
<br>
3.所谓管理员与一般员工不一样，是指虽然角色有很多种，但数据权限与功能权限不一样的是，数据权限往往非常简洁，而最简洁的就是两种人:“管理与一般员工”<br>
  管理员往往能看“本机构”，而一般员工只能看“本部门”！所谓本机构就是指“XX行”,比如:上海分行,北京分行,杭州分行等,所谓本部门就是指：上海分行审计部，北京分行计财部，南京分行法规部...<br>
  简单的理解就是管理员的范围更大!代表的是行级，而一般员工只限于部门级！<br>
<br>
4.总行与分行不一样，是指总行的管理员不但可以看整个总行各部门的数据(即行级)，同时还可以看所有分行的数据！或者说是全行的数据！<br>
 更复杂一点的是，总行的部门负责人，可以看各个分行本条线部门的数据！比如总行计财部领导可以查看各个分行计财部的数据！<br>
 简单的理解就是“总行看全部”，“分行看自己”<br>
 有的客户是二级管理员机制，即一级分行也有管理员，且可以做很多事件！这时存在一种情况就是，总行只管一级分行，而二级分行则一级分行去管！也可理解成是“上级管下级”！<br>
<br>
5.“公文数据”与“工作数据”之分，是指不同的数据对象的权限策略不一样，比如外规,制度,体系文件,合规报告,风险事件等，可能有各自不同的权限策略！但之间又有非常相似的地方！而最主要的两种区分就是“公文数据与工作数据之分”！<br>
  所谓“公文数据”是指由上级发布，让所有下级机构必须了解与学习的东西，是公文公告一类的，比如总行发布的制度，体系文件等！这种数据的权限策略特点就是：上级发布的所有下级都能看！而某一层下级发布的，只有其所有下级能看，兄弟层级不能看！<br>
  比如：总行发布的制度，所有分行都能看，而上海分行发布的制度只有上海分行的所有支行能看，其他分行的人不能看！这就意味着对于上海分行的员工来说，他有权看到的总行+上海分行的制度！而对于总行的管理员来说，则可以看到所有分行的数据！<br>
  所谓“工作数据”就是指工作方面的数据，相对于公文而言，它没有广而告之的特征，而只限于本机构本部门，比如风险事件，总行发生的风险事件肯定不可能让分行知道，各人管好自己份内的事！<br>
  “公文数据”与“工作数据”的区别有一个非常明显的标记就是：分行人员是否可以看总行的数据(也可以叫下级是否可以看上级？)，公文数据就可以看，而工作数据则不行！！而对于上级人员来言，这两种数据没有太大区别！即一般逻辑是下级不能看上级的东西，但公文数据却是反过来的！<br>
<br>
以上四种维度相互组合,会叠加出各种不同情况！要灵活掌握,比如“总行”的“管理员”在“查询”某种“公文数据(比如制度)”，应该是什么情况？？同样，“上海分行”的“一般员工”在“维护”某个“工作数据(比如风险事件)”，情况应该如何？？<br>
<br>
<font color="red">具体如何将平台的数据权限功能与上面的讲的策略“实际使用”呢？</font><br>
1.先配置四种权限策略，分别是“公文数据查询策略”“公文数据维护策略”“工作数据查询策略”“工作数据维护策略”,总行/分行,管理员与一般员工的区分则在策略中的主体定义中体现！<br>
2.然后配置四个机构模板，数据权限策略分别对应于上面四个策略!<br>
3.然后配置四个参照,分别使用四个模板,然后将查询情况下的机构树定义为多选！将维护情况下的定义为单选！！<font color="red">同时将这四种参照保存成注册参照,这能极大简化项目人员的使用！！</font><br>
4.将表单中各个机构字段分别定义成上面定义的几种注册参照之一！但要注意的是两点：一.如果录入时是默认值的，则可以不定义参照！二.录入时的参照与查询时是不一样的,即查询控件中是另一种定义！<br>
5.以上只是完成了录入卡片面板与查询面板中的控件定义，还有一个就是单据本身的查询策略，按道理应该与表单上机构查询的策略一样，只不过指定查询的字段名为该机构字段的名称！！<br>
<br>
</p>
<table width="852" height="333" border="1" cellpadding="3" cellspacing="3">
  <tr>
    <td width="72" height="32">&nbsp;</td>
    <td colspan="2" bgcolor="#FFFF99"><div align="center" class="style3">查询策略</div></td>
    <td colspan="2" bgcolor="#FFFF99"><div align="center" class="style3">维护策略</div></td>
  </tr>
  <tr>
    <td>&nbsp;</td>
    <td width="164" bgcolor="#66FFFF">公文数据<br>
    (比如制度,体系文件)</td>
    <td width="164" bgcolor="#66FFFF">工作数据<br>
    (比如合规事件,法律审查)</td>
    <td width="178" bgcolor="#66FFFF">公文数据<br>
    (比如制度,体系文件)</td>
    <td width="214" bgcolor="#66FFFF">工作数据<br>
    (比如合规事件,法律审查)</td>
  </tr>
  <tr>
    <td bgcolor="#339966"><span class="style1">管理员</span></td>
    <td><p>可以查看上级机构发布的公文,以及“本行”所有公文<br>
      <br>
        比如一个上海分行的管理员可以查看总行的制度+上海分行的所有制度<br>
        <br>
    简称为“<span class="style2">向上看直属父系,向下看所有</span>”</p>    </td>
    <td>&quot;只能查看“本行”数据<br>
      <br>
      比如上海分行管理员可以查看上海分行的所有合规事件!<br>      <br>
    简称为“<span class="style2">只向下看所有</span>”</td>
    <td>可以维护本行所有公文
      <p>比如上海分行的管理员，可以维护上海分行所有的制度!包括各部门甚至各支行的!</p>
    <p>简称为“<span class="style2">只向下看所有</span>”</p></td>
    <td>只能维护本人的,或者是本部门的!
    <p>简称为“<span class="style2">只能看自己</span>”</p></td>
  </tr>
  <tr>
    <td bgcolor="#339966"><span class="style1">一般员工</span></td>
    <td>&quot;可以查看上级机构发布的公文,以及“本部门”的公文<br>      <br>
      比如上海分行计财部的员工,可以查看总行的制度+上海分行计财部发布的公文<br>      <br>
    简称为“<span class="style2">向上看直属父系,向下只能看自己</span>”&quot;<br></td>
    <td>只能看“本部门”的数据
      <p>简称为“<span class="style2">只能看自己</span>”<br>
    </p></td>
    <td>一般没有维护功能,如果有，也只是维护本部门的!<br>      <br>
    简称为“<span class="style2">只能看自己</span>”</td>
    <td>一般没有维护功能,如果有，也只是维护本部门的!
      <p>简称为“<span class="style2">只能看自己</span>”<br>
    </p></td>
  </tr>
</table>
<br>
<p class="p_text">
要点:<br>
1.查询权限有两种表现:一是列表的直接过滤策略,一个是查询框中的机构参照！理论上两者应是同一策略！<br>
2.维护权限有两种表现:一是录入时卡片中的机构参照！一是点击编辑等按钮的校验逻辑！也可能左边是个权限过滤后的机构树,右边是数据列表维护!<br>
3.机构查询参照原则上应该是多选，而且联动选择子结点，可以有科室！查询机制都是In机制！(这个基本上无歧义,经典通用)<br>
4.维护参照原则上不出现科室(核心需求),而且只能选择末结点！如果维护是多选(比如抄送机构)，则多选参照不联动,只存储1个或多个根结点！(以前存所有子结点有诸多缺点)<br>
5.无论查询还是维护,单选还是多选,显示时都带全路径!原则上表中多加一个冗余字段,将机构名称存在下!使用一个编辑公式与加载公式解决存储与显示问题!<br>
</p>

<br>

<body>
<table width="1060" height="318" border="1" cellpadding="3" cellspacing="3">
  <tr>
    <td width="94" height="45">&nbsp;</td>
    <td width="530" bgcolor="#CCFFFF"><div align="center" style="color: #0000FF">查询参照</div></td>
    <td width="398" bgcolor="#CCFFFF"><div align="center" style="color: #0000FF">后台过滤权限</div></td>
  </tr>
  <tr>
    <td height="50" bgcolor="#00CC33"><span style="color: FFFFFF">录入值是单个</span></td>
    <td>In 机制,即表中字段 in (参照返回的所有值..)</td>
    <td>In机制,找出登录人员所有权限机构范围</td>
  </tr>
  <tr>
    <td bgcolor="#00CC33"><span style="color: FFFFFF">录入值是多个</span></td>
    <td>“like or”机制,先将参照返回值分割,比如有5个,然后就是<br>
      blcorp like '%;15;%' or blcorp like '%;18;%' or….<br>
      一共有5个or条件!<br>
      这里就有两个问题,一是查询条件不能太多!要有个控制,比如多于10个就报错!<br>
      多选可能有与/或的不同关系,可能还要有个开关!<br>
      特别注意的是:<br>
      如果存储都是叶子结点（比如外规发布机构）,而查询时都选叶子,则没问题!而查询选择的中目录,则自动联动所有子结点也没问题!<br>
    如果存储的是目录结点（比如制度抄送部门）,则上面机制就行不通了,幸运的是,这种情况一般不会用查询条件查，而是在后台过滤!(见右边) </td>
    <td>先找出登录人员的所属机构,再找出其机构父系ids,即blparentids,比如【;1;5;17;29;】,然后分割之,然后使用like or机制拼接SQL,比如 blcorp like '%;1;%' or blcorp like '%;5;%' or ….<br>      <br>
      这种情况就能解决存储的是目录结点,然后表达的含义是，登录人员是否在这些目录结点之下的含义!!!<br>
      <br>
      即有两种情况:<br>
      一种是表示该条数据属于什么机构(存储叶子机构),使用查询条件有意义!<br>
      一种表示是该条数据可以被哪些机构查看!(存储目录机构),使用查询条件没意义!
    <p></p></td>
  </tr>
</table>

<br>
总之,如果存储的是多选,且又是目录结点,然后又有查询条件,是最绕的,但如果强行使用 like or 机制,仔细想一下，也是行得通的!<br>
一种是先找出我能控制的范围,然后再找出哪些数据在我范围之中! 即“我能控制哪些数据?”,我是主人,我想知道我总共有权可以邀请哪些客人?【比如体系文件/事件等之所属部门】,列出这些数据!<br>
一种是先找出我的实际机构,然后看我是否在别人指定的范围之中! 即“我被哪些数据控制/邀请了?”,我是客人,我想知道我总共被哪些主人邀请了?【比如制度之抄送机构】,列出这些数据!"<br>

</body>
</html>

