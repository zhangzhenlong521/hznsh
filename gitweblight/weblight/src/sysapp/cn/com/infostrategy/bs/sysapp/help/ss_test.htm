<html>
<head>
<META http-equiv=Content-Type content="text/html; charset=GBK">
<TITLE>测试环节注意事项</TITLE>
<style type="text/css"> 
.p_text  { font-size: 12px;};
</style>
</head>
<body>
<p class="p_text">
系 统 测 试 之 普 信 方 建 议 事 项
<br>
现在系统的功能与表单非常多，测试的工作量非常大，所以我们要有清晰的优先级策略，尽可能采用最科学有效的方法，抓住关键问题,事半功倍！反之，可能会工作量大，时间来不及，效果还不好！
<br>
根据我们的经验，普信友情建议测试环节应该有重点的紧紧抓住以下四点注意事项！
<br><br>
<span style="font-size:14px;color:#0000FF">一.报表优先</span>
<br>
  即有时可以优先测试报表功能，从报表功能反向验证系统的功能！为什么可以这么说呢？有三点原因：<br>
  1.报表是系统的最终输出，只有输出对了，一切才有可能，反之输出都是错误的，则其他的再好都是无用!<br>
  2.报表是领导最关心的，甚至是领导唯一关心的(许多领导只看报表,其他功能从来不用)，所以说一个系统是否成功，有时关键就在于是否能正确输出领导最关心的报表数据！<br>
    领导的评价有时是一句顶一万句，如果领导想要的报表都能完美输出，则一切都是正面的，其他的问题都只是细节问题！<br>
    反之，领导急着要的报表捣鼓半天都弄不出来，数据还不对，最后来一句：这个系统到底有什么用???则其他再多的功能与成果都归零，也显然是一个失败的系统！<br>
  3.从报表是否缺乏可以最快的速度发现最关键的问题，比如发现报表缺少某个关键维度，则立即可以反向推算出表单上少某一项，或者某一项的码表定义有问题！<br>
    这比会传统的从前至后的测试方法，显然效率更高！<br>
<br>

  那测试报表，需要重点测试什么呢？<br>
  1.看维度少不少？比如是否有些关键维度竟然没有？比如业务类型,机构,时间等<br>
  2.看预置维度顺序对不对？是否将最关键的维度组合放在前面，让使用用最快捷的找到最需要的维度，而不是捣腾半天都找不到最关心的报表！而机构,时间,业务条线则是最经典的“金三角”维度!<br>
  3.像机构,业务条线等树型结构的维度，一般都需要支持两层统计，即即可以统计到一级分行，也可以统计到二级分行！看是否有这种需求？<br>
  4.报表的维度值排序是否正确？比如风险等级，业务条线等!排序不是最习惯的顺序，会让人很别扭，找不到感觉！<br>
  5.报表的统计值对不对？从表单录两条数据，看报表数据变了没？是怎么变的？数据逻辑对不对？<br>

<br><br>
<span style="font-size:14px;color:#0000FF">二.多以分行的角色进入系统提交工作流</span><br>
  不要老是用总行角色来提交工作流，而应该多以分行身份进入系统提交工作流！为什么这么说呢？有四点原因：<br>
  1.系统大量的数据其实都是通过工作流提交方式录入的，即是主要系统输入!! 前面讲报表是输出，同样输入也非常关键，因为输入不顺畅，报表最终数据是空的!<br>
  2.更多的输入其实是来自分行，即分行的数据量与访问量是远远大于总行的，从概率角度证明，也是最容易产生问题的区域！<br>
  3.由于培训条件限制,分行人员其实反而不如总行人员更容易受到各种技术支持与培训,出了问题技术支持也不方便!!!而且多数分行人员的IT的业务素质也相对不如总行员工！<br>
  4.分行发起的流程往往流程更长，更复杂，流程走起来更坎坷，更容易出各种问题！<br>
  所以说，其实就是总行角色占据着天时地利人和之各种优势，分行人行员恰恰完全相反，所以我们要抓住重点与高风险点，多以分行人员角色进入，提交工作流！只有流程提交顺了，输入才能正确高效！<br>

<br>

<span style="font-size:14px;color:#0000FF">三.表单的列表与卡片的默认展示</span><br>
   本来需求说明书上已写清楚所有表单样式，不可能还有什么要测试的，但实际情况是，系统出来后，真实感受还会有所不同，所以需要认真测试！<br>
   尤其是列表的哪些列显示，列的排列顺序，行数据排序方式这三个关键要素必须认真重视，为什么这么说呢？原因有二：<br>
   1.列表绝大多数功能点的主界面，也可以形象比喻成是其“脸面”，第一眼从脸面上能不能一眼清的看到最关心的信息，这些信息之间的顺序是否符合最习惯的顺序，则将90%的决定这个功能是否有感觉！！<br>
     该有的都有了，也没有多余的没必要出现的信息，则基本上感觉就有了，否则感觉就是别扭，总是要再点个什么按钮才能找到想要的信息！<br>
     很多人只关心测试系统的功能，比如按扭逻辑，表单项是否正确，不太注意或去认真思考，到底最好应该默认显示什么信息，他们之间的列顺序，行记录排序应该是什么更合理？这些问题不大注意，结果肯定吃大亏!<br>
   2.像结果中查找等许多功能都是基于列表进行的，如果列表没有此列，则自然这些功能发挥不了作用，所以要注意列表的显示列与顺序等问题!<br>

<br>
   那卡片上的控件测试要注意哪些事项呢？<br>
   1.首先要优先测试参照控件，因为系统数据之间的关联主要都是通过参照进行的！<br>
   2.参照尤其要注意三点：A.到底应该是单选还是多选?   B.树型是否只能选择末结点?  C.是否有权限过滤?<br>

<br>
<span style="font-size:14px;color:#0000FF">四.数据权限，功能权限</span><br>
   报表输出,表单输入+工作流提交都OK了,则还有一个非常关键的问题就是权限控制，即什么人能看什么数据，能做什么事？<br>
   如何最有效的测试数据权限呢?<br>
   1.90%数据权限其实就是根据机构过滤的，所以说大多数查询框中都应该有个机构查询条件,使用不同角色(总/分行,管理员/一般员工)进入系统，点击机构查询条件，是最快捷的测试方法!<br>
   2.如果不选择查询条件,直接查询,则在列表头上右击，查看数据权限计算逻辑日志，是最有效与准确的方法！如果一个个的切换角色录入数据验证，不但工作量非常大,而且会有遗漏，发现问题也很困难！<br>
   3.数据权限策略配置处有一个“演练策略”按钮功能,可以针对某个策略进行快速测试,而不需要不断切换用户!<br>

<br>
   如何最有效的测试功能权限呢？<br>
   1.功能权限测试没必要切换不同用户一一验证，只需直接在功能点"角色权限分配"中，选择一个个角色查看即可,这样效率最高！<br>

<br>
将上面四个关键点，根据优先级与重点注意事项来认真测试，则能取得事倍功倍的效果，系统质量更有有效被控制住！<br>
反之，如果思路不清晰，根据传统的测试方法，一个个的功能点,表单项,按钮去点，不但工作量巨大，而且并不容易发现真正的致命问题！<br>
然后又整天纠结于一些并不关键的细节问题之中,则更为危险!!!最后的结果就是,忙乎了半天,貌似搞了许多人性化的功能，但最后领导最关心的报表出不来,分行人员的流程根本走不通疯狂抱怨,界面数据找不到感觉,权限也完全不对！<br>
总结起来就是：该出来的出不来(报表不行)，该进去的进不去(流程提交不通)，最想看的看不到(列表数据展示与顺序不对),不该看的却都看到了(数据权限混乱)....  <br>

<br><br><br>
</p>
</body>
</html>
