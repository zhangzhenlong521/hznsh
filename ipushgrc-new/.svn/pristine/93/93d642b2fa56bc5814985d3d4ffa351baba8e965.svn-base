package com.msxf.ui.casemanage.p010;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import cn.com.infostrategy.to.mdata.BillVO;
import cn.com.infostrategy.ui.common.AbstractWorkPanel;
import cn.com.infostrategy.ui.common.MessageBox;
import cn.com.infostrategy.ui.common.UIUtil;
import cn.com.infostrategy.ui.common.WLTButton;
import cn.com.infostrategy.ui.mdata.BillListPanel;
import cn.com.infostrategy.ui.mdata.BillListSelectListener;
import cn.com.infostrategy.ui.mdata.BillListSelectionEvent;

/**
 * 第三人案件管理
 * 
 * @author zzl
 * 
 */
public class LawCaseDiSanRenWKPanel extends AbstractWorkPanel implements ActionListener, BillListSelectListener {

	BillListPanel list = null;
	WLTButton edit = null;
	WLTButton delete = null;
	WLTButton monitor = null;// 流程监控

	@Override
	public void initialize() {
		list = new BillListPanel("LBS_CASE_SELF_ZZL_CODE1");
		monitor = WLTButton.createButtonByType(WLTButton.LIST_WORKFLOWSTART_MONITOR);
		monitor.addActionListener(this);
		edit = WLTButton.createButtonByType(WLTButton.LIST_POPEDIT);
		delete = WLTButton.createButtonByType(WLTButton.LIST_DELETE);
		list.addBatchBillListButton(new WLTButton[] { WLTButton.createButtonByType(WLTButton.LIST_POPINSERT), edit, delete,// 删除
				WLTButton.createButtonByType(WLTButton.LIST_SHOWCARD),// 浏览
				monitor });
		list.repaintBillListButton();
		list.addBillListSelectListener(this);
		this.add(list);
	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == monitor) {
			wfStartOrMonitor();
		}
	}

	private void wfStartOrMonitor() {
		BillListPanel list = this.getbilListPanel();
		BillVO vo = list.getSelectedBillVO();
		if (vo == null) {
			MessageBox.showSelectOne(this);
			return;
		}

		if (!vo.containsKey("wfprinstanceid")) {
			MessageBox.show(list, "选中的记录中没有定义工作流字段(wfprinstanceid)!"); //
			return; //
		}

		String str_wfprinstanceid = vo.getStringValue("wfprinstanceid"); //
		if (str_wfprinstanceid == null || str_wfprinstanceid.trim().equals("")) {// 如果流程未发起，则发起流程，否则监控流程
			try {
				new cn.com.infostrategy.ui.workflow.WorkFlowDealActionFactory().dealAction("deal", list, null); // 处理动作!f发起流程
				// 发起工作流的同时，将工作流状态改为审批中
				String prinstanceid = UIUtil.getStringValueByDS(null, "select wfprinstanceid from  " + list.templetVO.getTablename() + " where id = " + vo.getStringValue("id"));
				if (prinstanceid == null) // 如果流程并未发起
					return;
				if (prinstanceid.equals(""))
					return;
				else {
					String id = vo.getStringValue("id");
					String sql = "update " + list.getTempletVO().getTablename() + "  set endtype = '审批中' where id = " + id;
					UIUtil.executeUpdateByDS(null, sql);
					list.refreshData();
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
		} else {// 流程监控
			cn.com.infostrategy.ui.workflow.engine.WorkflowMonitorDialog wfMonitorDialog = new cn.com.infostrategy.ui.workflow.engine.WorkflowMonitorDialog(list, str_wfprinstanceid, vo); //
			wfMonitorDialog.setMaxWindowMenuBar();
			wfMonitorDialog.setVisible(true);
		}

	}

	private BillListPanel getbilListPanel() {
		return list;
	}

	public void onBillListSelectChanged(BillListSelectionEvent event) {
		BillVO vo = event.getCurrSelectedVO();
		if (vo != null) {
			if (!vo.containsKey("wfprinstanceid")) {// 字段中不包含工作流字段
				return; //
			}
			String wf_id = vo.getStringValue("wfprinstanceid");
			if (wf_id == null || wf_id.trim().isEmpty()) {// 没有对应的工作流,修改和删除按钮可用
				edit.setEnabled(true);
				delete.setEnabled(true);
			} else {
				edit.setEnabled(false);
				delete.setEnabled(false);
			}
		}
	}

}
