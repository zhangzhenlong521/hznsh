package com.pushworld.ipushgrc.ui.icheck.word;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.net.URL;
import java.net.URLConnection;
import java.util.Map;

import cn.com.infostrategy.to.common.TBUtil;
import freemarker.template.Configuration;
import freemarker.template.DefaultObjectWrapper;
import freemarker.template.Template;
import freemarker.template.TemplateExceptionHandler;
/**
 * 
 * @author zzl
 *  word 导出
 */
public class WordExport {
	private String filePath=null;
	private String fileName=null;

	 private Configuration configure = null;
     public WordExport(){
            configure= new Configuration();
            configure.setDefaultEncoding("utf-8");
     }
     /**
      * 根据Doc模板生成word文件
      * @param dataMap Map 需要填入模板的数据
      * @param fileName 文件名称
      * @param savePath 保存路径
      */
     public void createDoc(Map<Object, Object> dataMap, String downloadType, String savePath){
    	 this.filePath=savePath;
    	 this.fileName=downloadType;
            try{
            	String path=downloadFile();
                   Template template  = null;
                   //加载模板文件
//                   String dirpath = System.getProperty("user.dir");
//                   String path=this.getClass().getResource("/").toString();                   
//                   path=path.replace("%20"," ");
//                   path=path.substring(6,path.length()-1);
//                   path = path + "/WebRoot/applet";
                   System.out.println(">>>>>>>>>>>>本地word路径>>>>>>>>>>>>>"+path);
                   configure.setDirectoryForTemplateLoading(new File(path));
                   //设置对象包装器
                   configure.setObjectWrapper(new DefaultObjectWrapper());
                   //设置异常处理器
                   configure.setTemplateExceptionHandler(TemplateExceptionHandler.IGNORE_HANDLER);
                   //定义Template对象,注意模板类型名字与downloadType要一致
                   template= configure.getTemplate(downloadType+".ftl");
                   //输出文档
                   File outFile = new File(savePath);
                   Writer out = null;
                   out= new BufferedWriter(new OutputStreamWriter(new FileOutputStream(outFile),"utf-8"));                                   
                   template.process(dataMap,out);
                   outFile.delete();
                   out.close();
                   System.out.println(">>>>>>>>>>>>>>"+"导出成功");
            }catch (Exception e) {
                   e.printStackTrace();
                   System.out.println("<<<<<<<<<<<<<<<<"+"导出失败");
            }finally{
            }
     }
     private String downloadFile(){
    	 String strurl=null;
    	 try{
        String osUser=System.getProperty("user.name");  
        String UserHome=System.getProperty("user.home");  
//      System.out.println(">>>>>>>>>>>>>>"+System.getProperty("PUSH.WEBPORT"));
        System.out.println(">>>>>>>>>>>用户名>>>>>>>>>>>..."+UserHome);
//      System.out.println(System.getProperties());
//      System.out.println(">>>>>>>>>>>用户名>>>>>>>>>>>..."+osUser);
     	TBUtil tb=new TBUtil();
    	String theURL=tb.getSysOptionStringValue("服务器word模板路径",null);
    	StringBuilder sb=new StringBuilder();
    	sb.append("http://");
    	sb.append(theURL);
    	sb.append("/"+fileName+".ftl");
    	theURL=sb.toString();
    	System.out.println("!!!!!!!!服务器路径!!!!!!!!!"+theURL);
    	URL url = new URL(theURL);  
         File dirFile = new File(UserHome+"/word");
	        if(!dirFile.exists()){//文件路径不存在时，自动创建目录
	          dirFile.mkdir();
	        }
	      URLConnection  connection = url.openConnection();
	      InputStream in = connection.getInputStream();  
	      FileOutputStream os = new FileOutputStream(dirFile+"/"+fileName+".ftl"); 
	      byte[] buffer = new byte[4 * 1024];  
	      int read;  
	      while ((read = in.read(buffer)) > 0) {  
	          os.write(buffer, 0, read);  
	           }  
	        os.close();  
	        strurl=dirFile.getPath();
    	 }catch(Exception  e){
    		 e.printStackTrace();
    	 }
		return strurl;
	   }   

	}  

